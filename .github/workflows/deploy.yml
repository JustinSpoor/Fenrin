name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main
    paths:
      - 'fenrin_frontend/**'
      - 'fenrin_backend/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Cache Docker layers to speed up the build process
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{runner.os}}-buildx-${{github.sha}}
          restore-keys: |
            ${{runner.os}}-buildx-

      # Build and push frontend Docker image
      - name: Build and Push Frontend Docker Image
        run: |
          docker build -t ${{secrets.DOCKER_USERNAME}}/angular-frontend:latest ./fenrin_frontend
          docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
          docker push ${{ secrets.DOCKER_USERNAME }}/angular-frontend:latest

      # Build and push backend Docker image
      - name: Build and Push Backend Docker Image
        run: |
          docker build -t ${{secrets.DOCKER_USERNAME}}/spring-boot-backend:latest ./fenrin_backend
          docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
          docker push ${{secrets.DOCKER_USERNAME}}/spring-boot-backend:latest

      - name: Setup SSH key
        run: | 
          echo "${{ secrets.VPS_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      # Deploy to VPS using SSH
      - name: SSH to VPS and Deploy
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "sudo mkdir -p /home/fenrin/fenrin-app"
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "cd /home/fenrin/fenrin-app"
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}"
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "sudo docker pull ${{secrets.DOCKER_USERNAME}}/angular-frontend"
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "sudo docker pull ${{secrets.DOCKER_USERNAME}}/spring-boot-backend"
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "cd /home/fenrin/fenrin-app"
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "docker compose -f /home/fenrin/fenrin-app/docker-compose.yml down"
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "docker compose -f /home/fenrin/fenrin-app/docker-compose.yml up -d"
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "docker cp angular-frontend:/usr/share/nginx/html/ /usr/share/nginx/"